    <h2>Построение HTML-форм в PHP-FAN</h2>

    <p>Проектирование любой формы основано на следующих составляющих:</p>
    <div id="form_struct">
        <div id="form_img">
            <img src="/image/test/form_struct.png" width="314" height="192" alt='Structure of form' />
        </div>
        <div id="form_descr">
            <dl class="art_def">
                <dt>Структура формы</dt>
                <dd>- одна из основных составляющих формы. Описание струкруры формы делается в мета-файле блока, содержащего форму. В мета-файле указываются общие параметры формы, параметры каждого поля (имя поля, тип, правила валидации и т.п.) и патерны HTML-элементов, для формирвания HTML-кода формы. Рамки данного теста не позволяют подробно описать все параметры мета-файла (подробное описание будет в документации к PHP-FAN). Пример всех параметров, которые можно указывать в метафайле, можно посмотреть в <b>{$meta_example}</b> и назначение большинства параметров понятно из их названий или комментариев.</dd>
                <dt>Контроллер формы</dt>
                <dd>- класс блока формы. Как будет видно из примера - класс чаще всего, содержит сравнительно простой и короткий PHP-код. Класс блока должен быть унаследован от \fan\core\block\form\usual или от другого класса, являющегося наследником \fan\core\block\form\usual. В методе init() блока, могут задаваться дополнительные параметры визуализации формы и выполняться другие нестандартные операции. Но обязальным действием, которое необходимо выполнить в методе init(), является вызов парсинга формы: <b>$this->_parseForm();</b> (см. следующий пункт). Так-же в этом классе создаются методы <b>onSubmit()</b> и <b>onError()</b>, в которых указываются действия, которые необходимо выполнить при успешной валидации формы или при ошибке. Если никаких действий выполнять не нужно - эти методы создавать не обязательно.</dd>
                <dt>Парсер формы</dt>
                <dd>- объект класса <b>\core\service\form</b>. Процесс парсинга начинается с анализа данных, которые пришли в текущем запросе к серверу. Если парсер определяет, что данные, которые пришли в запросе, относятся к текущей форме - начинается процесс их обработки. Сначала полученные данные валидируются в соответствии с заданной структурой и в зависимости от результатов парсинга вызываются методы <b>onSubmit()</b> или <b>onError()</b>.</dd>
                <dt>Шаблон формы</dt>
                <dd>- шаблон блока формы. Шаблоном формы является шаблон блока. Специфической особенностью этого шаблона является то что в нем есть специальные шаблонные теги, из которых формируются элементы формы. Формирование элементов формы осуществляется на основе паттернов, заданных в мета-файле родительского блока. Обычно существующих паттернов достаточно для большинства форм, но при необходимости можно добавлять свои паттерны в мета-файл текущего блока.</dd>
            </dl>
        </div>
    </div>
